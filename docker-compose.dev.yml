version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:13-alpine
    environment:
      POSTGRES_DB: seo_audit_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/shared/database/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching and job queue
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # API Gateway
  api-gateway:
    build:
      context: ./backend/api-gateway
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/seo_audit_db
      - REDIS_URL=redis://redis:6379
      - CRAWLEE_SERVICE_URL=http://crawlee-service:3001
      - LIGHTHOUSE_SERVICE_URL=http://lighthouse-service:3002
      - SEO_SERVICE_URL=http://seo-service:3003
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  # Crawlee Service
  crawlee-service:
    build:
      context: ./backend/crawlee-service
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - REDIS_URL=redis://redis:6379
      - MAX_PAGES=50
      - CONCURRENCY=2
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    cap_add:
      - SYS_ADMIN
    security_opt:
      - seccomp:unconfined

  # Lighthouse Service
  lighthouse-service:
    build:
      context: ./backend/lighthouse-service
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - REDIS_URL=redis://redis:6379
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    cap_add:
      - SYS_ADMIN
    security_opt:
      - seccomp:unconfined

  # SEO Audit Service
  seo-service:
    build:
      context: ./backend/seo-audit-service
      dockerfile: Dockerfile
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/seo_audit_db
      - REDIS_URL=redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3010:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:3000/api
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
    depends_on:
      - api-gateway
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: seo_audit_network
